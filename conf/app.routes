# microservice specific routes
->          /establisher                                             establishers.Routes
->          /trustee                                                 trustees.Routes

GET         /                                                        controllers.BeforeYouStartController.onPageLoad()


GET         /scheme-details                                          controllers.SchemeTaskListController.onPageLoad(mode: Mode = NormalMode, srn: Option[String] = None)
GET         /scheme-details/:srn                                     controllers.SchemeTaskListController.onPageLoad(mode: Mode = UpdateMode, srn: Option[String])

GET         /what-you-will-need-before-start                         controllers.BeforeYouStartController.onPageLoad()

GET         /index                                                   controllers.IndexController.onPageLoad

GET         /assets/*file                                            controllers.Assets.versioned(path="/public", file: Asset)

GET         /language/:lang                                          controllers.LanguageSwitchController.switchToLanguage(lang: String)

GET         /this-service-has-been-reset                             controllers.SessionExpiredController.onPageLoad

GET         /unauthorised                                            controllers.UnauthorisedController.onPageLoad

GET         /logout                                                  controllers.LogoutController.onPageLoad

GET         /you-need-to-register                                    controllers.YouNeedToRegisterController.onPageLoad()

GET         /continue-registration                                   controllers.ContinueRegistrationController.continue()

GET         /what-you-will-need-members                              controllers.WhatYouWillNeedMembersController.onPageLoad
POST        /what-you-will-need-members                              controllers.WhatYouWillNeedMembersController.onSubmit

GET         /what-you-will-need-benefits-insurance                   controllers.WhatYouWillNeedBenefitsInsuranceController.onPageLoad
POST        /what-you-will-need-benefits-insurance                   controllers.WhatYouWillNeedBenefitsInsuranceController.onSubmit

GET         /sharing-scheme-details                                  controllers.MembershipPensionRegulatorController.onPageLoad(mode: Mode = NormalMode)
POST        /sharing-scheme-details                                  controllers.MembershipPensionRegulatorController.onSubmit(mode: Mode = NormalMode)
GET         /:mode/sharing-scheme-details                            controllers.MembershipPensionRegulatorController.onPageLoad(mode: Mode)
POST        /:mode/sharing-scheme-details                            controllers.MembershipPensionRegulatorController.onSubmit(mode: Mode)

GET         /what-you-will-need-bank-details                         controllers.WhatYouWillNeedBankDetailsController.onPageLoad
POST        /what-you-will-need-bank-details                         controllers.WhatYouWillNeedBankDetailsController.onSubmit

GET         /having-pensions-working-knowledge                       controllers.WorkingKnowledgeController.onPageLoad(mode: Mode = NormalMode)
POST        /having-pensions-working-knowledge                       controllers.WorkingKnowledgeController.onSubmit(mode: Mode = NormalMode)

GET         /:mode/having-pensions-working-knowledge                 controllers.WorkingKnowledgeController.onPageLoad(mode: Mode)
POST        /:mode/having-pensions-working-knowledge                 controllers.WorkingKnowledgeController.onSubmit(mode: Mode)

GET         /what-you-will-need-for-working-knowledge                controllers.WhatYouWillNeedWorkingKnowledgeController.onPageLoad
POST        /what-you-will-need-for-working-knowledge                controllers.WhatYouWillNeedWorkingKnowledgeController.onSubmit

GET         /scheme-name                                             controllers.SchemeNameController.onPageLoad(mode: Mode = NormalMode)
POST        /scheme-name                                             controllers.SchemeNameController.onSubmit(mode: Mode = NormalMode)
GET         /:mode/scheme-name                                       controllers.SchemeNameController.onPageLoad(mode: Mode)
POST        /:mode/scheme-name                                       controllers.SchemeNameController.onSubmit(mode: Mode)

GET         /scheme-type                                             controllers.SchemeTypeController.onPageLoad(mode: Mode = NormalMode)
POST        /scheme-type                                             controllers.SchemeTypeController.onSubmit(mode: Mode = NormalMode)
GET         /:mode/scheme-type                                       controllers.SchemeTypeController.onPageLoad(mode: Mode)
POST        /:mode/scheme-type                                       controllers.SchemeTypeController.onSubmit(mode: Mode)

GET         /any-trustees                                            controllers.HaveAnyTrusteesController.onPageLoad(mode: Mode = NormalMode)
POST        /any-trustees                                            controllers.HaveAnyTrusteesController.onSubmit(mode: Mode = NormalMode)
GET         /:mode/any-trustees                                      controllers.HaveAnyTrusteesController.onPageLoad(mode: Mode)
POST        /:mode/any-trustees                                      controllers.HaveAnyTrusteesController.onSubmit(mode: Mode)

GET         /country-established-in                                  controllers.EstablishedCountryController.onPageLoad(mode: Mode = NormalMode)
POST        /country-established-in                                  controllers.EstablishedCountryController.onSubmit(mode: Mode = NormalMode)
GET         /:mode/country-established-in                            controllers.EstablishedCountryController.onPageLoad(mode: Mode)
POST        /:mode/country-established-in                            controllers.EstablishedCountryController.onSubmit(mode: Mode)

GET         /insurance-company-name                                  controllers.InsuranceCompanyNameController.onPageLoad(mode: Mode = NormalMode, srn: Option[String] = None)
POST        /insurance-company-name                                  controllers.InsuranceCompanyNameController.onSubmit(mode: Mode = NormalMode, srn: Option[String] = None)
GET         /change/insurance-company-name                           controllers.InsuranceCompanyNameController.onPageLoad(mode: Mode = CheckMode, srn: Option[String] = None)
POST        /change/insurance-company-name                           controllers.InsuranceCompanyNameController.onSubmit(mode: Mode = CheckMode, srn: Option[String] = None)
GET         /:mode/insurance-company-name/:srn                       controllers.InsuranceCompanyNameController.onPageLoad(mode: Mode, srn: Option[String])
POST        /:mode/insurance-company-name/:srn                       controllers.InsuranceCompanyNameController.onSubmit(mode: Mode, srn: Option[String])

GET         /insurance-policy-number                                 controllers.InsurancePolicyNumberController.onPageLoad(mode: Mode = NormalMode, srn: Option[String] = None)
POST        /insurance-policy-number                                 controllers.InsurancePolicyNumberController.onSubmit(mode: Mode = NormalMode, srn: Option[String] = None)
GET         /change/insurance-policy-number                          controllers.InsurancePolicyNumberController.onPageLoad(mode: Mode = CheckMode, srn: Option[String] = None)
POST        /change/insurance-policy-number                          controllers.InsurancePolicyNumberController.onSubmit(mode: Mode = CheckMode, srn: Option[String] = None)
GET         /:mode/insurance-policy-number/:srn                      controllers.InsurancePolicyNumberController.onPageLoad(mode: Mode, srn: Option[String])
POST        /:mode/insurance-policy-number/:srn                      controllers.InsurancePolicyNumberController.onSubmit(mode: Mode, srn: Option[String])

GET         /uk-bank-account                                         controllers.UKBankAccountController.onPageLoad(mode: Mode = NormalMode)
POST        /uk-bank-account                                         controllers.UKBankAccountController.onSubmit(mode: Mode = NormalMode)
GET         /:mode/uk-bank-account                                   controllers.UKBankAccountController.onPageLoad(mode: Mode)
POST        /:mode/uk-bank-account                                   controllers.UKBankAccountController.onSubmit(mode: Mode)

GET         /bank-account-details                                    controllers.BankAccountDetailsController.onPageLoad(mode: Mode = NormalMode)
POST        /bank-account-details                                    controllers.BankAccountDetailsController.onSubmit(mode: Mode = NormalMode)
GET         /:mode/bank-account-details                              controllers.BankAccountDetailsController.onPageLoad(mode: Mode)
POST        /:mode/bank-account-details                              controllers.BankAccountDetailsController.onSubmit(mode: Mode)

GET         /current-scheme-members                                  controllers.CurrentMembersController.onPageLoad(mode: Mode = NormalMode)
POST        /current-scheme-members                                  controllers.CurrentMembersController.onSubmit(mode: Mode = NormalMode)
GET         /:mode/current-scheme-members                            controllers.CurrentMembersController.onPageLoad(mode: Mode)
POST        /:mode/current-scheme-members                            controllers.CurrentMembersController.onSubmit(mode: Mode)

GET         /future-scheme-members                                   controllers.FutureMembersController.onPageLoad(mode: Mode = NormalMode)
POST        /future-scheme-members                                   controllers.FutureMembersController.onSubmit(mode: Mode = NormalMode)
GET         /:mode/future-scheme-members                             controllers.FutureMembersController.onPageLoad(mode: Mode)
POST        /:mode/future-scheme-members                             controllers.FutureMembersController.onSubmit(mode: Mode)

GET         /investment-regulated-scheme                             controllers.InvestmentRegulatedSchemeController.onPageLoad(mode: Mode = NormalMode)
POST        /investment-regulated-scheme                             controllers.InvestmentRegulatedSchemeController.onSubmit(mode: Mode = NormalMode)
GET         /:mode/investment-regulated-scheme                       controllers.InvestmentRegulatedSchemeController.onPageLoad(mode: Mode)
POST        /:mode/investment-regulated-scheme                       controllers.InvestmentRegulatedSchemeController.onSubmit(mode: Mode)

GET         /occupational-pension-scheme                             controllers.OccupationalPensionSchemeController.onPageLoad(mode: Mode = NormalMode)
POST        /occupational-pension-scheme                             controllers.OccupationalPensionSchemeController.onSubmit(mode: Mode = NormalMode)
GET         /:mode/occupational-pension-scheme                       controllers.OccupationalPensionSchemeController.onPageLoad(mode: Mode)
POST        /:mode/occupational-pension-scheme                       controllers.OccupationalPensionSchemeController.onSubmit(mode: Mode)

GET         /type-of-benefits                                        controllers.TypeOfBenefitsController.onPageLoad(mode: Mode = NormalMode)
POST        /type-of-benefits                                        controllers.TypeOfBenefitsController.onSubmit(mode: Mode = NormalMode)
GET         /:mode/type-of-benefits                                  controllers.TypeOfBenefitsController.onPageLoad(mode: Mode)
POST        /:mode/type-of-benefits                                  controllers.TypeOfBenefitsController.onSubmit(mode: Mode)

GET         /benefits-secured-by-insurance                           controllers.BenefitsSecuredByInsuranceController.onPageLoad(mode: Mode = NormalMode, srn: Option[String] = None)
POST        /benefits-secured-by-insurance                           controllers.BenefitsSecuredByInsuranceController.onSubmit(mode: Mode = NormalMode, srn: Option[String] = None)
GET         /change/benefits-secured-by-insurance                    controllers.BenefitsSecuredByInsuranceController.onPageLoad(mode: Mode = CheckMode, srn: Option[String] = None)
POST        /change/benefits-secured-by-insurance                    controllers.BenefitsSecuredByInsuranceController.onSubmit(mode: Mode = CheckMode, srn: Option[String] = None)
GET         /:mode/benefits-secured-by-insurance/:srn                controllers.BenefitsSecuredByInsuranceController.onPageLoad(mode: Mode, srn: Option[String])
POST        /:mode/benefits-secured-by-insurance/:srn                controllers.BenefitsSecuredByInsuranceController.onSubmit(mode: Mode, srn: Option[String])

GET         /enter-postcode                                          controllers.InsurerEnterPostcodeController.onPageLoad(mode: Mode = NormalMode, srn: Option[String] = None)
POST        /enter-postcode                                          controllers.InsurerEnterPostcodeController.onSubmit(mode: Mode = NormalMode, srn: Option[String] = None)
GET         /change/enter-postcode                                   controllers.InsurerEnterPostcodeController.onPageLoad(mode: Mode = CheckMode, srn: Option[String] = None)
POST        /change/enter-postcode                                   controllers.InsurerEnterPostcodeController.onSubmit(mode: Mode = CheckMode, srn: Option[String] = None)
GET         /:mode/enter-postcode/:srn                               controllers.InsurerEnterPostcodeController.onPageLoad(mode: Mode, srn: Option[String])
POST        /:mode/enter-postcode/:srn                               controllers.InsurerEnterPostcodeController.onSubmit(mode: Mode, srn: Option[String])

GET         /select-address                                          controllers.InsurerSelectAddressController.onPageLoad(mode: Mode = NormalMode, srn: Option[String] = None)
POST        /select-address                                          controllers.InsurerSelectAddressController.onSubmit(mode: Mode = NormalMode, srn: Option[String] = None)
GET         /change/select-address                                   controllers.InsurerSelectAddressController.onPageLoad(mode: Mode = CheckMode, srn: Option[String] = None)
POST        /change/select-address                                   controllers.InsurerSelectAddressController.onSubmit(mode: Mode = CheckMode, srn: Option[String] = None)
GET         /:mode/select-address/:srn                               controllers.InsurerSelectAddressController.onPageLoad(mode: Mode, srn: Option[String])
POST        /:mode/select-address/:srn                               controllers.InsurerSelectAddressController.onSubmit(mode: Mode, srn: Option[String])

GET         /confirm-address                                         controllers.InsurerConfirmAddressController.onPageLoad(mode: Mode = NormalMode, srn: Option[String] = None)
POST        /confirm-address                                         controllers.InsurerConfirmAddressController.onSubmit(mode: Mode = NormalMode, srn: Option[String] = None)
GET         /change/confirm-address                                  controllers.InsurerConfirmAddressController.onPageLoad(mode: Mode = CheckMode, srn: Option[String] = None)
POST        /change/confirm-address                                  controllers.InsurerConfirmAddressController.onSubmit(mode: Mode = CheckMode, srn: Option[String] = None)
GET         /:mode/confirm-address/:srn                              controllers.InsurerConfirmAddressController.onPageLoad(mode: Mode, srn: Option[String])
POST        /:mode/confirm-address/:srn                              controllers.InsurerConfirmAddressController.onSubmit(mode: Mode, srn: Option[String])

GET         /check-your-answers-before-start                         controllers.CheckYourAnswersBeforeYouStartController.onPageLoad(mode: Mode = NormalMode, srn: Option[String] = None)
GET         /:mode/check-your-answers-before-start/:srn              controllers.CheckYourAnswersBeforeYouStartController.onPageLoad(mode: Mode, srn: Option[String])

GET         /check-your-answers-members                              controllers.CheckYourAnswersMembersController.onPageLoad(mode: Mode = NormalMode, srn: Option[String] = None)
GET         /:mode/check-your-answers-members/:srn                   controllers.CheckYourAnswersMembersController.onPageLoad(mode: Mode, srn: Option[String])

GET         /check-your-answers-bank-details                         controllers.CheckYourAnswersBankDetailsController.onPageLoad()

GET         /check-your-answers-benefits-insurance                   controllers.CheckYourAnswersBenefitsAndInsuranceController.onPageLoad(mode: Mode = NormalMode, srn: Option[String] = None)
GET         /:mode/check-your-answers-benefits-insurance/:srn        controllers.CheckYourAnswersBenefitsAndInsuranceController.onPageLoad(mode: Mode, srn: Option[String])

GET         /select-adviser-address                                  controllers.AdviserAddressListController.onPageLoad(mode: Mode = NormalMode)
POST        /select-adviser-address                                  controllers.AdviserAddressListController.onSubmit(mode: Mode = NormalMode)
GET         /:mode/select-adviser-address                            controllers.AdviserAddressListController.onPageLoad(mode: Mode)
POST        /:mode/select-adviser-address                            controllers.AdviserAddressListController.onSubmit(mode: Mode)

GET         /confirm-adviser-address                                 controllers.AdviserAddressController.onPageLoad(mode: Mode = NormalMode)
POST        /confirm-adviser-address                                 controllers.AdviserAddressController.onSubmit(mode: Mode = NormalMode)
GET         /:mode/confirm-adviser-address                           controllers.AdviserAddressController.onPageLoad(mode: Mode)
POST        /:mode/confirm-adviser-address                           controllers.AdviserAddressController.onSubmit(mode: Mode)

GET         /adviser-postcode                                        controllers.AdviserPostCodeLookupController.onPageLoad(mode:Mode=NormalMode)
POST        /adviser-postcode                                        controllers.AdviserPostCodeLookupController.onSubmit(mode:Mode=NormalMode)
GET         /:mode/adviser-postcode                                  controllers.AdviserPostCodeLookupController.onPageLoad(mode:Mode)
POST        /:mode/adviser-postcode                                  controllers.AdviserPostCodeLookupController.onSubmit(mode:Mode)

GET         /adviser-email-address                                   controllers.AdviserEmailAddressController.onPageLoad(mode: Mode = NormalMode)
POST        /adviser-email-address                                   controllers.AdviserEmailAddressController.onSubmit(mode: Mode = NormalMode)
GET         /:mode/adviser-email-address                             controllers.AdviserEmailAddressController.onPageLoad(mode: Mode)
POST        /:mode/adviser-email-address                             controllers.AdviserEmailAddressController.onSubmit(mode: Mode)

GET         /adviser-phone-number                                    controllers.AdviserPhoneController.onPageLoad(mode: Mode = NormalMode)
POST        /adviser-phone-number                                    controllers.AdviserPhoneController.onSubmit(mode: Mode = NormalMode)
GET         /:mode/adviser-phone-number                              controllers.AdviserPhoneController.onPageLoad(mode: Mode)
POST        /:mode/adviser-phone-number                              controllers.AdviserPhoneController.onSubmit(mode: Mode)

GET         /who-has-working-knowledge                               controllers.AdviserNameController.onPageLoad(mode: Mode = NormalMode)
POST        /who-has-working-knowledge                               controllers.AdviserNameController.onSubmit(mode: Mode = NormalMode)
GET         /:mode/who-has-working-knowledge                         controllers.AdviserNameController.onPageLoad(mode: Mode)
POST        /:mode/who-has-working-knowledge                         controllers.AdviserNameController.onSubmit(mode: Mode)

GET         /check-adviser-answers                                   controllers.AdviserCheckYourAnswersController.onPageLoad()

GET         /declare-after-changing-details/:srn                     controllers.VariationDeclarationController.onPageLoad(srn: Option[String])
GET         /on-click-declare-after-changing-details/:srn            controllers.VariationDeclarationController.onClickAgree(srn: Option[String])

GET         /make-more-changes/:srn                                  controllers.AnyMoreChangesController.onPageLoad(srn: Option[String])
POST        /make-more-changes/:srn                                  controllers.AnyMoreChangesController.onSubmit(srn: Option[String])

GET         /confirmation                                            controllers.register.SchemeSuccessController.onPageLoad()
POST        /confirmation                                            controllers.register.SchemeSuccessController.onSubmit()

GET         /declaration                                             controllers.register.DeclarationController.onPageLoad
GET         /on-click-declaration                                    controllers.register.DeclarationController.onClickAgree

GET         /details-updated/:srn                                    controllers.register.SchemeVariationsSuccessController.onPageLoad(srn)

GET         /you-still-have-changes/:srn                             controllers.register.StillNeedDetailsController.onPageLoad(srn: Option[String])
GET         /cannot-make-changes/:srn                                controllers.register.CannotMakeChangesController.onPageLoad(srn: Option[String])

GET         /urls-partial                                            controllers.UrlsPartialController.retrieveUrlsPartial
GET         /can-scheme-be-registered                                controllers.UrlsPartialController.checkIfSchemeCanBeRegistered

GET         /discard                                                controllers.DeleteSchemeController.onPageLoad
POST        /discard                                                controllers.DeleteSchemeController.onSubmit

GET         /delete-changes/:srn                                    controllers.DeleteSchemeChangesController.onPageLoad(srn: String)
POST        /delete-changes/:srn                                    controllers.DeleteSchemeChangesController.onSubmit(srn: String)

GET         /cannot-start-registration                              controllers.CannotStartRegistrationController.onPageLoad
